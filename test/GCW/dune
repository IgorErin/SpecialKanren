(env
 (_
  (flags
   (:standard -rectypes -w -27-33-32-39-34))))

; copypast rework.

(rule
 (deps
  (:exec %{project_root}/bin/main.exe)
  %{cmo:../../samples/GCW})
 (targets target.ml)
 (mode
  (promote (until-clean)))
 (action
  (progn
   (run
    sh
    -c
    "%{exec} -cmt -par q1 -fname checkAnswer -o %{targets} ../../samples/.Samples.objs/byte/gCW.cmt")
   (run
    sh
    -c
    "ocamlformat --enable-outside-detected-project -o %{targets} ./%{targets} "))))

(rule
 (deps
  (:exec %{project_root}/bin/main.exe)
  %{cmo:../../samples/GCW})
 (targets target_bench.ml)
 (mode
  (promote (until-clean)))
 (action
  (progn
   (run
    sh
    -c
    "%{exec} -cmt -par q1 -fname checkAnswer -o %{targets} ../../samples/.Samples.objs/byte/gCW.cmt")
   (run
    sh
    -c
    "ocamlformat --enable-outside-detected-project -o %{targets} ./%{targets} "))))

(executable
 (name run)
 (libraries GT OCanren OCanren.tester)
 (modules run target)
 (preprocess
  (pps
   OCanren-ppx.ppx_repr
   OCanren-ppx.ppx_fresh
   OCanren-ppx.ppx_distrib
   -new-typenames
   GT.ppx_all)))

(executable
 (public_name GCW_bench)
 (name bench)
 (libraries GT OCanren benchmark core)
 (modules target_bench bench)
 (preprocess
  (pps
   OCanren-ppx.ppx_repr
   OCanren-ppx.ppx_fresh
   OCanren-ppx.ppx_distrib
   -new-typenames
   GT.ppx_all)))

(cram
 (deps run.exe target.ml)
 (package SpecialKanren))
