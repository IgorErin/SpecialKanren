(env
 (_
  (flags
   (:standard -rectypes -w -27-33-32-39))))

(rule
 (deps
  (:exec %{project_root}/bin/main.exe)
  %{cmo:../../samples/sub})
 (target target.ml)
 (mode
  (promote (until-clean)))
 (action
  (progn
   (run
    sh
    -c
    "%{exec} -cmt -par z -fname sub -o %{target} ../../samples/.Samples.objs/byte/sub.cmt")
   (run
    sh
    -c
    "ocamlformat --enable-outside-detected-project -o %{target} ./%{target} "))))

(executable
 (name run)
 (libraries GT OCanren OCanren.tester)
 (modules run target)
 (preprocess
  (pps
   OCanren-ppx.ppx_repr
   OCanren-ppx.ppx_fresh
   OCanren-ppx.ppx_distrib
   -new-typenames
   GT.ppx_all)))

(rule
 (deps
  (:exec %{project_root}/bin/main.exe)
  %{cmo:../../samples/sub})
 (target target_bench.ml)
 (action
  (progn
   (run
    sh
    -c
    "%{exec} -cmt -par z -fname sub -o %{target} ../../samples/.Samples.objs/byte/sub.cmt")
   (run
    sh
    -c
    "ocamlformat --enable-outside-detected-project -o %{target} ./%{target} "))))

(executable
 (public_name sub_bench)
 (name bench)
 (libraries GT OCanren benchmark base core)
 (modules bench target_bench)
 (preprocess
  (pps
   OCanren-ppx.ppx_repr
   OCanren-ppx.ppx_fresh
   OCanren-ppx.ppx_distrib
   -new-typenames
   GT.ppx_all)))

(cram
 (deps
  target.ml
  ./run.exe
  (package SpecialKanren)))
